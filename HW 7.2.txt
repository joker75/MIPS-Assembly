# Homework 7 Program 2
# This program loads even rows with numbers ascending from 1-20
# as well as odd rows with numbers descending from 20-1
# Register Assignments: $t0 = Pointer to current beginning of row
# 						$t1 = Row counter and index
# 						$t2 = Column counter and index
# 						$t3 = Pointer to current address to store data
# 						$t4 = Value to be stored in each array element 
#						$t5 = Boolean register (0 = even, 1 = odd)

		.data
ar:		.space 1600		# Array of 400 integers (4 bytes each) in 20X20 array		

		.text
main:	la $t0, ar		# Load the array into $t0
		move $t1,$0 	# Initialize row counter/index 
		li $t4, 0
		
rloop: 	move $t2,$0 	# Initialize column counter/index
		move $t3,$t0 	# Initialize col. pointer to 1st element of row

cloop: 	sw $t4,0($t3) 	# Store value in current array element
		addi $t2,$t2,1 	# Increment column counter/index by 1 
		beq $t2,20,nxtrow # Go to next row if column counter = 20 
		addi $t3,$t3,4	# Increment the column pointer
		
		rem $t5, $t1,2	# 0 for even; 1 for odd
		beqz $t5, inc	# Ascending values for even rows
		beq $t5, 1, dec	# Descending values for odd rows

inc: 	addi $t4,$t4,1	# Increment the number
		j cloop	 		# Go back and do another column
		
dec:	addi $t4, $t4,-1# Decrement the value
		j cloop	 		# Go back and do another column
			
nxtrow: addi $t1,$t1,1 	# Increment row counter/index by 1 
		beq $t1,20,end	# Leave row loop if row counter = 20
		add $t0,$t0,80 	# Increment the beginning-of-row pointer by
						# the number of bytes in a row
		j rloop 		# Start next row

end: 	li $v0,10 	# Reach here if row loop is done 
		syscall 	# End of program